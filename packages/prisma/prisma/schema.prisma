// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

generator erd {
  provider = "prisma-erd-generator"
  output = "./ERD.png"
  theme = "dark"
  mmdcPath = "node_modules/.bin"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model AuthUser {
  id           String    @id @unique
  auth_session AuthSession[]
  auth_key     AuthKey[]
  username String @unique
  email String @unique

  guilds_owned Guild[] @relation("guildOwn")
  guilds_joined Guild[] @relation("guildJoin")
  guilds_banned Guild[] @relation(name: "guildBanned")

  @@map("auth_user")
}

model AuthSession {
  id             String	@id @unique
  user_id        String
  active_expires BigInt
  idle_expires   BigInt
  auth_user      AuthUser   @relation(references: [id], fields: [user_id], onDelete: Cascade)

  @@index([user_id])
  @@map("auth_session")
}

model AuthKey {
  id              String  @id @unique
  hashed_password String?
  user_id         String
  primary_key     Boolean
  expires         BigInt?
  auth_user       AuthUser    @relation(references: [id], fields: [user_id], onDelete: Cascade)

  @@index([user_id])
  @@map("auth_key")
}

model Guild {
  id String @id @unique @default(uuid())
  name String
  owner AuthUser @relation(name: "guildOwn", references: [id], fields: [ownerId])
  ownerId String
  invite_code String

  members AuthUser[] @relation(name: "guildJoin")
  banned AuthUser[] @relation(name: "guildBanned")
}
